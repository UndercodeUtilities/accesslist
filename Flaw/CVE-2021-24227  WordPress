

public static function servePatronOnlyImage( $image=false ) {
 
    if ( ( !isset( $image ) OR !$image ) AND isset( $_REQUEST['patron_only_image'] ) ) {
        $image = $_REQUEST['patron_only_image'];
    }
     
    if ( !$image OR $image == '') {
        // This is not a rewritten image request. Exit.
        return;
    }
 
    if ( !( isset( $_REQUEST['patreon_action'] ) AND $_REQUEST['patreon_action'] == 'serve_patron_only_image' ) ) {
        return; 
    }
 
    $upload_locations = wp_upload_dir();
 
    // We want the base upload location so we can account for any changes to date based subfolders in case there are
 
    $upload_dir = substr( wp_make_link_relative( $upload_locations['baseurl'] ) , 1 );  
 
    $image = get_site_url() . '/' . $upload_dir . '/' . $image;
     
    if ( current_user_can( 'manage_options' ) ) {
        Patreon_Protect::readAndServeImage( $image );   
    }           
     
    // Below define can be defined in any plugin to bypass core locking function and use a custom one from plugin
    // It is independent of the plugin load order since it checks if it is defined.
    // It can be defined by any plugin until right before the_content filter is run.
 
    if ( apply_filters( 'ptrn/bypass_image_filtering', defined( 'PATREON_BYPASS_IMAGE_FILTERING' ) ) ) {
        Patreon_Protect::readAndServeImage( $image );
    }
 
    // Check if the image is protected:
 
    $attachment_id = attachment_url_to_postid( $image );
 
    // attachment_url_to_postid returns 0 if it cant find the attachment post id
     
    if ( $attachment_id == 0 ) {
         
        // Couldnt determine attachment post id. Try to get id from thumbnail
        $attachment_id = Patreon_Protect::getAttachmentIDfromThumbnailURL( $image );
 
        //No go. Have to get out and serve the image normally
        if ( $attachment_id == 0 OR !$attachment_id ) {
            Patreon_Protect::readAndServeImage( $image );
